# This is a basic workflow to help you get started with Actions

name: Checkout 

# Controls when the action will run. 
on:
  push:
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          # persist-credentials: false
          ssh-key: ${{secrets.DEPLOY_SSH_KEY}}
          ssh-known-hosts: ${{secrets.SSH_HOSTS}} 
          ssh-strict: 'FALSE'
      - name: Update submodules with latest hash
        run: git submodule update --remote
      # - name: Install Vercel cli
      #   run: yarn global add vercel
      # - name: Deploy to Vercel (Production Deployment)
      #   if: github.ref == 'refs/heads/main'
      #   run: vercel --prod --token ${{secrets.VERCEL_TOKEN}}
      # - name: Deploy to Vercel (Preview Deployment)
      #   if: github.ref != 'refs/heads/main'
      #   run: vercel --token ${{secrets.VERCEL_TOKEN}}
      # - name: Run id
      #   run: echo ${{github}}
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJSON(github) }}
      #   run: echo "$GITHUB_CONTEXT"
      # - name: Dump job context
      #   env:
      #     JOB_CONTEXT: ${{ toJSON(job) }}
      #   run: echo "$JOB_CONTEXT"
      # - name: Dump steps context
      #   env:
      #     STEPS_CONTEXT: ${{ toJSON(steps) }}
      #   run: echo "$STEPS_CONTEXT"
      # - name: Dump runner context
      #   env:
      #     RUNNER_CONTEXT: ${{ toJSON(runner) }}
      #   run: echo "$RUNNER_CONTEXT"
      # - name: Dump strategy context
      #   env:
      #     STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      #   run: echo "$STRATEGY_CONTEXT"
      # - name: Dump matrix context
        # env:
        #   MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        # run: echo "$MATRIX_CONTEXT"
      - name: Create check     
        run: |
          PREVIEW_CHECK=$(curl --location --request POST 'https://api.github.com/repos/k-lusine/next-intl/check-runs' --header "Accept:application/vnd.github.v3+json" --header 'Content-Type:application/json' --user 'k-lusine:${{secrets.GITHUB_TOKEN}}' --data-raw '{"details_url":"https://www.google.com", "name":"Preview Url", "head_sha":"${{github.sha}}" }'),
          echo $PREVIEW_CHECK,
          echo ${PREVIEW_CHECK[id]},
          # echo ${{PREVIEW_CHECK.id}},
          curl --location --request PATCH 'https://api.github.com/repos/k-lusine/next-intl/check-runs${PREVIEW_CHECK.id}' --header "Accept:application/vnd.github.v3+json" --header 'Content-Type:application/json' --user 'k-lusine:${{secrets.GITHUB_TOKEN}}' --data-raw '{"details_url":"https://www.google.com"}',


